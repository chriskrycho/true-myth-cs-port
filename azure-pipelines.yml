trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
      - master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorVersion: '1'
  minorVersion: '0'
  patchVersion: '0'
  docfxVersion: '2.40.12'

jobs:
  - job: Windows
    pool:
      vmImage: 'VS2017-Win2016'
    steps: 
    - task: DotNetCoreInstaller@0
      displayName: "Install .NET Core"
      inputs:
        version: 2.1.500

    - task: NuGetToolInstaller@0
      displayName: "Install NuGet"

    - task: NuGetCommand@2
      displayName: 'NuGet Restore'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: VSBuild@1
      displayName: "VS Build"
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: "VS Test (.NET Framework 4.6.1 | Any CPU)"
      inputs:
        testAssemblyVer2: 'test\TrueMyth.Test\bin\Release\net461\TrueMyth.Test.dll'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        vstestLocationMethod: location
        vstestLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe'
        codeCoverageEnabled: true

    - task: VSTest@2
      displayName: "VS Test (.NET Standard 2.0 | Any CPU)"
      inputs:
        testAssemblyVer2: 'test\TrueMyth.Test\bin\Release\netcoreapp2.1\TrueMyth.Test.dll'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        vstestLocationMethod: location
        vstestLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\IDE\Extensions\TestPlatform\vstest.console.exe'
        otherConsoleOptions: '/Framework:FrameworkCore10'
        codeCoverageEnabled: true

    - task: DotNetCoreCLI@2
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      displayName: 'NuGet Pack (CI)'
      inputs:
        command: pack
        packagesToPack: 'src/TrueMyth/TrueMyth.csproj'
        versioningScheme: byPrereleaseNumber
        requestedMajorVersion: '$(majorVersion)'
        requestedMinorVersion: '$(minorVersion)'
        requestedPatchVersion: '$(patchVersion)'
        arguments: '--include-symbols'
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true

    - task: NuGetCommand@2
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      displayName: 'NuGet Push'
      inputs:
        command: push
        nuGetFeedType: external
        publishFeedCredentials: 'myget/true-myth'
        includeSymbols: true

    - task: NuGetCommand@2
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      displayName: 'Install DocFx'
      inputs:
        command: custom
        arguments: 'install docfx.console -Version $(docfxVersion)'

    - task: PowerShell@2
      condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
      displayName: 'Build DocFx Project'
      inputs:
        pwsh: true
        filePath: 'docsrc\build.ps1'
        arguments: '-DocFxVersion $(docfxVersion)'

  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: DotNetCoreInstaller@0
      displayName: "Install .NET Core"
      inputs:
        version: 2.1.500

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        versioningScheme: 'byPrerelaseNumber'
        majorVersion: '$(majorVersion)'
        minorVersion: '$(minorVersion)'
        patchVersion: '$(patchVersion)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: 'test/TrueMyth.Test/TrueMyth.Test.csproj'
        #arguments: '-f netcoreapp2.1' # see xunit/xunit#1357

  - job: macOS
    pool:
      vmImage: 'macOS-10.13'
    steps:
    - task: DotNetCoreInstaller@0
      displayName: "Install .NET Core"
      inputs:
        version: 2.1.500

    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        versioningScheme: 'byPrerelaseNumber'
        majorVersion: '$(majorVersion)'
        minorVersion: '$(minorVersion)'
        patchVersion: '$(patchVersion)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet test'
      inputs:
        command: 'test'
        projects: 'test/TrueMyth.Test/TrueMyth.Test.csproj'
        #arguments: '-f netcoreapp2.1' # see xunit/xunit#1357
